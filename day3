
* 이벤트 처리

1. addEventListener 메서드로 이벤트 리스너 등록


target.addEventListener(type,listener,useCapture);
구성요소
target : 이벤트 리스너를 등록할 DOM
type : 이벤트 유형을 뜻하는 문자열( "click","mouseup" ...)
listener : 이벤트가 발생했을 때 처리를 담당하는 콜백 함수의 참조
useCapture : 이벤트 단계

useCapture는 다음 값 중 하나가 될 수 있다.
true : 캡처링 단계
false : 버블링 단계 (생략했을 때의 기본값)

<script type="text/javascript">

	window.onload  = function(){
		var element = document.getElementById("box");
		element.addEventListener("click",function(e){  //1
			e.currentTarget.style.backgroundColor = "red";   //2
		}, false)  //3
	}

</script>

1 => 받는 인수는 이벤트 객체
2 => e.currentTarget 이벤트 객체안의 클릭한 요소를 참조하라는 객체.
3=> useCapture 단계


위 소스를 function 따로 빼서도 가능
<script type="text/javascript">

	window.onload  = function(){
		var element = document.getElementById("box");
		element.addEventListener("click",chcolor, false)
	}
	
	function chcolor(e){
		e.currentTarget.style.backgroundColor = "red";
	}
</script>


2. removeEventListener
window.onload  = function(){
	var element = document.getElementById("box");
	element.addEventListener("click",function(e){
		console.log("hello!!!!");
		element.removeEventListener("click" , arguments.callee, false );
	}, false)
}

//이벤트 리스너 안에서 removeEventListener를 호출해서 스스로 삭제함.
이때는 listener에 arguments.callee라는 값을 넘긴다.

예제) http://darling2.cafe24.com/study/javascript/study/day4.html
window.onload = function(){
	var box = document.getElementById("box");
	document.body.appendChild(box);

	var boxOffsetX, boxOffsetY;

	box.style.display = "inline-block";
	box.style.position="absolute";
	box.style.padding = "10px";
	box.style.backgroundColor = "blue";
	
	//mousedown 리스너
	box.addEventListener("mousedown" , function mouseDownListener(e){
		document.addEventListener("mousemove" ,mouseMoveListener, false);
		boxOffsetX = e.offsetX; boxOffsetY = e.offsetY;
	},false);
	
	//mouseUp 리스너
	box.addEventListener("mouseup" , function mouseUpListener(e){
		document.removeEventListener("mousemove" ,mouseMoveListener, false);
		boxOffsetX = e.offsetX; boxOffsetY = e.offsetY;
	},false);

	function mouseMoveListener(e){
		box.style.left = e.pageX - boxOffsetX + "px";
		box.style.top = e.pageY - boxOffsetY + "px";
	}

};


예제 ) 키보드 이벤트 객체 -> http://darling2.cafe24.com/study/javascript/study/4.html


3. 기본 동작 취소하기  preventDefault 메서드

window.onload = function(){
	var box = document.getElementById("box"); 
	box.addEventListener("click",function(e){
		if(confirm("페이지를 이동할래?"))  e.preventDefault();  //true일때 조건탐
	},false)
}
	
</script>

<a id ="box" href ="https://www.naver.com">box</a>


4. 이벤트 리스너 안의 this

	1) 이벤트 리스너 안의 this
	window.onload = function(){
		function Person(name){
			this.name = name;
		}

		Person.prototype.sayHello = function(){
			console.log("Hello" + this.name);
		}

		var person = new Person("TOM");
		var button = document.getElementById("box");
		button.addEventListener("click",person.sayHello , false);
	}

	</script>

	<a id ="box" name="홍">box</a>  
	1. 클릭시   //Hello 홍
	=> 이벤트 리스너안의 this는  이벤트가 발생한 요소 객체를 가리킴
	=> a태그의 name값을 출력한 것

	2)bind 메서드를 사용해 this를 특정 객체 가리키게 하기.
	window.onload = function(){
		function Person(name){
			this.name = name;
		}

		Person.prototype.sayHello = function(){
			console.log("Hello" + this.name);
		}

		var person = new Person("TOM");
		var button = document.getElementById("box");
		button.addEventListener("click",person.sayHello.bind(person) , false);
		//this를 person을 가리켜준다.

	}
